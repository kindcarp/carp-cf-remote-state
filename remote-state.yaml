AWSTemplateFormatVersion: 2010-09-09
Description: Creates an S3 bucket to use for Terraform remote state.

Parameters:
  BucketName:
    Description: S3 bucket name
    Type: String
    AllowedPattern: '[a-zA-Z0-9][a-zA-Z0-9.-]*[a-zA-Z0-9]'
    MinLength: '3'
    MaxLength: '63'
    ConstraintDescription: must contain only alphanumberic characters, dashes and periods.
  Owner:
    Description: Owner of the bucket.
    Type: String
    MaxLength: '256'
  TableName:
    Description: Name of the table used to lock state file.
    Type: String
    AllowedPattern: '[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9]'
    MinLength: '3'
    MaxLength: '255'
  RoleName:
    Description: Name of the role used to access state file.
    Type: String
    AllowedPattern: '[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9]'
    MinLength: '3'
    MaxLength: '64'

Outputs:
  BucketName:
    Value:
      Ref: S3Bucket
    Description: Name of the created bucket for terraform s3 backend.
  TableName:
    Value:
      Ref: DynamoDbTable
    Description: Name of the DynamoDB Table for terraform s3 locking.
  RoleName:
    Value:
      Ref: RoleName
    Description: Name of the role for accessing terraform state and locking.
  RemoteStateKey:
    Value:
      Ref: RemoteStateKey
    Description: Name of the key used to encrypt the terraform state bucket.

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref RemoteStateKey
      Tags:
        - Key: owner
          Value:
            Ref: Owner
      VersioningConfiguration:
        Status: Enabled

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: "AllowSSLRequestsOnly"
            Action: "s3:*"
            Effect: "Deny"
            Resource:
              - Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: "S3Bucket"
                  - "/*"
              - Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: "S3Bucket"
            Principal: "*"
            Condition:
              Bool:
                aws:SecureTransport: "false"

  DynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'LockID'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'LockID'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName:
        Ref: TableName
      Tags:
        - Key: owner
          Value:
            Ref: Owner
      SSESpecification:
        SSEEnabled: true

  RemoteStateKey:
    Type: AWS::KMS::Key
    Properties:
      Description: This key is used to encrypt the terraform state files at rest.
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':root'
            Action: 'kms:*'
            Resource: '*'
      Tags:
        - Key: owner
          Value:
            Ref: Owner

  TerraformRunnerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: !Ref RoleName

  TerraformStatePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: TerraformStateAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:ListAllMyBuckets'
              - 's3:GetBucketLocation'
            Resource: '*'
          - Effect: Allow
            Action: 's3:ListBucket'
            Resource:
              - Fn::GetAtt:
                - S3Bucket
                - Arn
          - Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Resource:
              !Join
                - ''
                - - Fn::GetAtt:
                    - S3Bucket
                    - Arn
                  - '/*'
          - Effect: Allow
            Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'
            Resource:
              Fn::GetAtt:
                - DynamoDbTable
                - Arn
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
            Resource:
              Fn::GetAtt:
                - RemoteStateKey
                - Arn
      Roles:
        - !Ref TerraformRunnerRole
